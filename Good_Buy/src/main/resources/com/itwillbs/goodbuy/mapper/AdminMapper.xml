<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.goodbuy.mapper.AdminMapper">
	<!-- [ 공통코드 ] -->
	<!-- 공통코드 등록 - INSERT -->
	<insert id="insertCommonCode">
		INSERT 
		  INTO COMMONCODETYPE
		VALUES (
			#{CODETYPE_ID}
		    , #{CODETYPE_NAME}
		    , #{DESCRIPTION}
		    , 1						-- 1: 사용, 2: 미사용
		)
	</insert>
	
	<!-- 공통코드 등록(상세코드) - INSERT -->
	<insert id="insertCommonCodeType">
		INSERT 
		  INTO COMMONCODE
		VALUES 
		<foreach item="code" collection="subCodes" separator=",">
            (
	            #{code.CODETYPE_ID}
	            , #{code.CODE_ID}
	            , #{code.CODE_NAME}
	            , #{code.CODE_DESCRIPTION}
	            , #{code.CODE_STATUS}
	            , #{code.CODE_SEQ}
            )
        </foreach>
     </insert>
     
     <!-- 공통코드 목록 조회 - SELECT -->
     <select id="selectCommonCodes">
     	SELECT 
				M.CODETYPE_ID
			   , M.CODETYPE_NAME
		       , M.DESCRIPTION AS MAIN_DESC
			   , S.CODE_ID
		       , S.CODE_NAME
		       , S.DESCRIPTION AS SUB_DESC
		       , S.CODE_STATUS
		       , S.CODE_SEQ
		  FROM COMMONCODETYPE M 
		  JOIN COMMONCODE S
		    ON M.CODETYPE_ID = S.CODETYPE_ID
		 WHERE 1 = 1
		 <if test="searchValue != null">
		 	  AND M.CODETYPE_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR M.CODETYPE_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR M.DESCRIPTION LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.CODE_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.CODE_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.DESCRIPTION LIKE CONCAT('%', #{searchValue}, '%')
		 </if>
		 ORDER BY
	 	<choose>
			<when test="orderColumn == 'CODETYPE_ID'">M.CODETYPE_ID</when>
			<when test="orderColumn == 'CODE_ID'">S.CODE_ID</when>
			<otherwise>CODETYPE_ID</otherwise>
		</choose>
		<if test="orderDir == 'asc'">ASC</if>
		<if test="orderDir == 'desc'">DESC</if>
		 LIMIT
		 	   #{start}
		 	   , #{length}
     </select>
     
     <!-- 공통코드 컬럼 수 조회 - SELECT -->
     <select id="selectCommonCodesTotal" resultType="int">
     	SELECT COUNT(*)
		  FROM COMMONCODETYPE M 
		  JOIN COMMONCODE S
		  ON M.CODETYPE_ID = S.CODETYPE_ID
     </select>
     
     <!-- 공통코드 검색 컬럼 수 조회 - SELECT -->
     <select id="selectCommonCodesFiltered" resultType="int">
     	SELECT COUNT(*)
		  FROM COMMONCODETYPE M 
		  JOIN COMMONCODE S
		    ON M.CODETYPE_ID = S.CODETYPE_ID
		 WHERE 1 = 1
		 <if test="searchValue != null">
		 	  AND M.CODETYPE_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR M.CODETYPE_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR M.DESCRIPTION LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.CODE_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.CODE_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR S.DESCRIPTION LIKE CONCAT('%', #{searchValue}, '%')
		 </if>
     </select>
     
     <!-- 공통코드 수정 - UPDATE -->
     <update id="updateCommonCodes">
     	UPDATE COMMONCODETYPE M, COMMONCODE S
		   SET 
		    	M.CODETYPE_NAME = #{CODETYPE_NAME}
			    , M.DESCRIPTION = #{CODETYPE_DESC}
			    , S.CODE_ID = #{CODE_ID}
			    , S.CODE_NAME = #{CODE_NAME}
			    , S.DESCRIPTION = #{CODE_DESC}
			    , S.CODE_STATUS = #{CODE_STATUS}
			    , S.CODE_SEQ = #{CODE_SEQ}
		 WHERE
				M.CODETYPE_ID = #{OLD_CODETYPE_ID}
			    AND S.CODETYPE_ID = #{OLD_CODETYPE_ID}
			    AND S.CODE_ID = #{OLD_CODE_ID}
     </update>
     
     <!-- 공통코드 삭제 - DELETE -->
     <delete id="deleteCommonCodes">
     	DELETE FROM COMMONCODE
     	 WHERE CODETYPE_ID = #{CODETYPE_ID}
     	   AND CODE_ID = #{CODE_ID}
     </delete>
     
     <!-- 사용되지 않는 공통코드(상위코드) 삭제 - DELETE -->
     <delete id="deleteDeprecatedCommonCode">
     	DELETE FROM COMMONCODETYPE
     	 WHERE NOT EXISTS (
            SELECT 1
            FROM COMMONCODE
            WHERE COMMONCODETYPE.CODETYPE_ID = COMMONCODE.CODETYPE_ID
        )
     </delete>
     
     <!-- [ 회원관리 ] -->
     <!-- 전체 회원 목록 조회 - SELECT -->
     <select id="selectMemberList" resultType="member">
     	SELECT MEM_ID
			   , MEM_NAME
		       , MEM_NICK
		       , MEM_BIRTHDAY
		       , MEM_EMAIL
		       , (CASE WHEN MEM_GENDER = "M" THEN "남"
					   WHEN MEM_GENDER = "F" THEN "여" END) AS MEM_GENDER
		       , (CASE WHEN MEM_PHONE IS NULL OR MEM_PHONE = '' THEN ''
					   ELSE CONCAT(SUBSTR(MEM_PHONE, 1, 3), '-', SUBSTR(MEM_PHONE, 4, 4), '-', SUBSTR(MEM_PHONE, 8, 4))
		                END) AS MEM_PHONE
		       , MEM_POST_CODE
		       , MEM_ADDRESS1
		       , MEM_ADDRESS2
		       , MEM_GRADE
		       , MEM_STATUS
		       , MEM_REG_DATE
		       , MEM_WITHDRAW_DATE
		       , MEM_PROFILE
		       , MEM_INTRO
		       , SNS_STATUS
		       , AUTH_STATUS
		  FROM MEMBER
		 WHERE 1 = 1
			<if test="memStatus != null and memStatus != 0">
		 	   AND MEM_STATUS = #{memStatus}
		 	</if>
		 	<if test="memGrade != null and memGrade != '전체'">
		 	   AND MEM_GRADE = #{memGrade}
		 	</if>
		 	<if test="searchValue != null and searchValue != ''">
		 	   AND (MEM_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_NICK LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_EMAIL LIKE CONCAT('%', #{searchValue}, '%')) 
		 	</if>
		 ORDER BY 
			<choose>
				<when test="orderColumn == 'mem_id'">MEM_ID</when>
				<when test="orderColumn == 'mem_name'">MEM_NAME</when>
				<when test="orderColumn == 'mem_nick'">MEM_NICK</when>
				<when test="orderColumn == 'mem_email'">MEM_EMAIL</when>
				<when test="orderColumn == 'mem_reg_date'">MEM_REG_DATE</when>
				<otherwise>MEM_REG_DATE</otherwise>
			</choose>
			<if test="orderDir == 'asc'">ASC</if>
			<if test="orderDir == 'desc'">DESC</if>
		  LIMIT
		 	   #{start}
		 	   , #{length}
     </select>
     
     <!-- 회원목록 전체 컬럼 수 조회 - SELECT -->
     <select id="selectMemberListTotal" resultType="int">
     	SELECT COUNT(*)
     	  FROM MEMBER
     </select>
     
     <!-- 회원목록 필터링 후 컬럼 수 조회 - SELECT -->
     <select id="selectMemberListFiltered" resultType="int">
     	SELECT COUNT(*)
     	  FROM MEMBER
     	 WHERE 1 = 1
			<if test="memStatus != null and memStatus != 0">
		 	   AND MEM_STATUS = #{memStatus}
		 	</if>
		 	<if test="memGrade != null and memGrade != '전체'">
		 	   AND MEM_GRADE = #{memGrade}
		 	</if>
		 	<if test="searchValue != null and searchValue != ''">
		 	   AND (MEM_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_NAME LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_NICK LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_EMAIL LIKE CONCAT('%', #{searchValue}, '%')) 
		 	</if>
     </select>
     
     <!-- 회원 상세 정보 조회 - SELECT -->
     <select id="selectMember" resultType="member">
     	SELECT MEM_ID
			   , MEM_NAME
		       , MEM_NICK
		       , MEM_BIRTHDAY
		       , MEM_EMAIL
		       , (CASE WHEN MEM_GENDER = "M" THEN "남"
					   WHEN MEM_GENDER = "F" THEN "여" END) AS MEM_GENDER
		       , (CASE WHEN MEM_PHONE IS NULL OR MEM_PHONE = '' THEN ''
					   ELSE CONCAT(SUBSTR(MEM_PHONE, 1, 3), '-', SUBSTR(MEM_PHONE, 4, 4), '-', SUBSTR(MEM_PHONE, 8, 4))
		                END) AS MEM_PHONE
		       , MEM_POST_CODE
		       , MEM_ADDRESS1
		       , MEM_ADDRESS2
		       , MEM_GRADE
		       , MEM_STATUS
		       , MEM_REG_DATE
		       , MEM_WITHDRAW_DATE
		       , MEM_PROFILE
		       , MEM_INTRO
		       , SNS_STATUS
		       , AUTH_STATUS
		FROM MEMBER
		WHERE MEM_ID = #{mem_id}
     </select>
     
     <!-- 회원 상태 수정 - UPDATE -->
     <update id="updateMemberInfo">
     	UPDATE MEMBER
     	   SET MEM_GRADE = #{mem_grade}
     	   	   , MEM_STATUS = #{mem_status}
     	 WHERE MEM_ID = #{mem_id}
     </update>
     
     <!-- 회원 삭제 - DELETE -->
     <delete id="deleteMember">
     	DELETE FROM MEMBER
     	 WHERE MEM_ID = #{mem_id}
     </delete>
     
     <!-- [ 신고 상품 관리 ] -->
     <!-- 신고된 상품 전체 컬럼 수 조회 - SELECT -->
     <select id="selectProductReportTotal" resultType="int">
     	SELECT COUNT(*)
		  FROM PRODUCT_REPORTS
     </select>
     
      <!-- 신고된 상품 필터링 후 컬럼 수 조회 - SELECT -->
     <select id="selectProductReportFiltered" resultType="int">
     	SELECT COUNT(*)
		  FROM PRODUCT_REPORTS R
		  JOIN PRODUCT P
		    ON R.PRODUCT_ID = P.PRODUCT_ID
		 WHERE 1 = 1
		<if test="status != null and status != ''">
		   AND STATUS = #{status}
		</if>
		<if test="searchValue != null and searchValue != ''">
		   AND (R.REPORTER_ID LIKE CONCAT('%', #{searchValue}, '%')
			   OR R.REPORTER_ID LIKE CONCAT('%', #{searchValue}, '%')
	 	       OR R.PRODUCT_ID LIKE CONCAT('%', #{searchValue}, '%')
	 	       OR P.PRODUCT_TITLE LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.STATUS LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.REASON LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.ADMIN_ID LIKE CONCAT('%', #{searchValue}, '%'))
		</if>
     </select>
     
     <!-- 필터링 된 신고 상품 목록 조회 - SELECT -->
     <select id="selectProductReportList" resultType="map">
     	SELECT R.REPORT_ID
			   , R.REPORTER_ID
		       , R.PRODUCT_ID
		       , P.PRODUCT_TITLE
		       , DATE_FORMAT(R.REPORT_DATE, '%Y-%m-%d %H:%i:%s') AS REPORT_DATE
		       , R.REASON
		       , R.STATUS
		       , R.ACTION_REASON
		       , R.ADMIN_ID
		       , DATE_FORMAT(R.ACTION_DATE, '%Y-%m-%d %H:%i:%s') AS ACTION_DATE
		  FROM PRODUCT_REPORTS R
		  JOIN PRODUCT P
		    ON R.PRODUCT_ID = P.PRODUCT_ID
		 WHERE 1 = 1
		 <if test="status != null and status != ''">
		   AND STATUS = #{status}
		</if>
		<if test="searchValue != null and searchValue != ''">
		   AND 
		   	  (
			   R.REPORTER_ID LIKE CONCAT('%', #{searchValue}, '%')
			   OR R.REPORTER_ID LIKE CONCAT('%', #{searchValue}, '%')
	 	       OR R.PRODUCT_ID LIKE CONCAT('%', #{searchValue}, '%')
	 	       OR P.PRODUCT_TITLE LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.STATUS LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.REASON LIKE CONCAT('%', #{searchValue}, '%') 
	 	       OR R.ADMIN_ID LIKE CONCAT('%', #{searchValue}, '%')
	 	      )
		</if>
		 ORDER BY 
			<choose>
				<when test="orderColumn == 'REPORTER_ID'">R.REPORTER_ID</when>
				<when test="orderColumn == 'PRODUCT_ID'">R.PRODUCT_ID</when>
				<when test="orderColumn == 'PRODUCT_TITLE'">P.PRODUCT_TITLE</when>
				<when test="orderColumn == 'REPORT_DATE'">R.REPORT_DATE</when>
				<when test="orderColumn == 'REASON'">R.REASON</when>
				<when test="orderColumn == 'STATUS'">R.STATUS</when>
				<when test="orderColumn == 'ACTION_REASON'">R.ACTION_REASON</when>
				<when test="orderColumn == 'ADMIN_ID'">R.ADMIN_ID</when>
				<when test="orderColumn == 'ACTION_DATE'">R.ACTION_DATE</when>
				<otherwise>R.REPORT_DATE</otherwise>
			</choose>
			<if test="orderDir == 'asc'">ASC</if>
			<if test="orderDir == 'desc'">DESC</if>
		  LIMIT
		 	   #{start}
		 	   , #{length}
     </select>
     
     
     
     
     
     <!-- [ 공지사항 관리 ] -->
     <!-- 공지사항 목록 전체 컬럼 수 조회 - SELECT -->
     <select id="selectNoticeListTotal" resultType="int">
     	SELECT COUNT(*)
     	  FROM NOTICE
     </select>
     
     <!-- 공지사항 필터링 후 전체 컬럼 수 조회 - SELECT -->
     <select id="selectNoticeListFiltered" resultType="int">
     	SELECT COUNT(*)
     	  FROM NOTICE
     	 WHERE 1 = 1
     	 	<if test="searchValue != null and searchValue != ''">
		 	   AND (
			 	   	NOTICE_SUBJECT LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR NOTICE_CONTENT LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	   		)
		 	</if>
     </select>
     
     <!-- 공지사항 목록 필터링,검색 포함 조회 - SELECT -->
     <select id="selectNoticeList" resultType="notice">
     	SELECT *
		  FROM NOTICE
		 WHERE 1 = 1
		 	<if test="searchValue != null and searchValue != ''">
		 	   AND (
		 	   		NOTICE_SUBJECT LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR NOTICE_CONTENT LIKE CONCAT('%', #{searchValue}, '%')
		 	    	OR MEM_ID LIKE CONCAT('%', #{searchValue}, '%')
		 	    	)
		 	</if>
		 ORDER BY 
			<choose>
				<when test="orderColumn == 'mem_id'">MEM_ID</when>
				<when test="orderColumn == 'notice_subject'">NOTICE_SUBJECT</when>
				<when test="orderColumn == 'notice_content'">NOTICE_CONTENT</when>
				<when test="orderColumn == 'notice_date'">NOTICE_DATE</when>
				<when test="orderColumn == 'notice_read_count'">NOTICE_READ_COUNT</when>
				<otherwise>NOTICE_DATE</otherwise>
			</choose>
			<if test="orderDir == 'asc'">ASC</if>
			<if test="orderDir == 'desc'">DESC</if>
		  LIMIT
		 	   #{start}
		 	   , #{length}
     </select>
     
     <delete id="deleteNotice">
     	DELETE
     	  FROM NOTICE
     	 WHERE 1 = 1
	       AND NOTICE_ID IN 
		<foreach collection="deleteItems" item="notice_id" index="index" open="(" close=")" separator=",">
			   #{notice_id}
		</foreach>
     </delete>
     
     
     
     
     <!-- ************************************************************* -->
     <!-- FAQ 목록 가져오기 -->
     <select id="selectFaqList">
		SELECT *
		  FROM FAQ
		 WHERE 1 = 1
		 	<if test="searchValue != null and searchValue != ''">
		 	   AND FAQ_SUBJECT LIKE CONCAT('%', #{searchValue}, '%')
		 		OR FAQ_CONTENT LIKE CONCAT('%', #{searchValue}, '%')
<!-- 		 		OR FAQ_CATE LIKE CONCAT('%', #{searchValue}, '%') -->
		 	</if>
		 ORDER BY 
			<choose>
				<when test="orderColumn == 'FAQ_ID'">FAQ_ID</when>
				<when test="orderColumn == 'FAQ_SUBJECT'">FAQ_SUBJECT</when>
				<when test="orderColumn == 'FAQ_CONTENT'">FAQ_CONTENT</when>
				<when test="orderColumn == 'FAQ_CATE'">FAQ_CATE</when>
			</choose>
			<if test="orderDir == 'asc'">ASC</if>
			<if test="orderDir == 'desc'">DESC</if>
		  LIMIT
		 	   #{start}
		 	   , #{length}
		 </select>
    
     <!-- FAQ 컬럼 수 조회 - SELECT -->
     <select id="selectFaqTotal" resultType="int">
     	SELECT COUNT(*)
     	FROM FAQ
     </select>
     
     <!-- FAQ 검색 컬럼 수 조회 - SELECT -->
     <select id="selectFaqFiltered" resultType="int">
     	SELECT COUNT(*)
		  FROM FAQ
		 WHERE 1 = 1
		 <if test="searchValue != null">
		 	  AND FAQ_SUBJECT LIKE CONCAT('%', #{searchValue}, '%')
		 	   OR FAQ_CONTENT LIKE CONCAT('%', #{searchValue}, '%')
		 </if>
     </select>
     
     <!-- FAQ 수정 -->
     <update id="updateFaqInfo">
     	UPDATE FAQ
     	   SET FAQ_SUBJECT = #{FAQ_SUBJECT}
     	   	   , FAQ_CONTENT = #{FAQ_CONTENT}
     	   	   , FAQ_CATE = #{FAQ_CATE}
     	   	   , LIST_STATUS = #{LIST_STATUS}
     	 WHERE FAQ_ID = #{FAQ_ID}
     </update>
     
     <!-- FAQ 삭제 -->
     <delete id="deleteFaq">
		DELETE FROM FAQ
		WHERE 1=1
		AND FAQ_ID IN
		<foreach collection="deleteItems" item="FAQ_ID" index="index" open="(" close=")" separator=",">
			   #{FAQ_ID}
		</foreach>
		
		 
     </delete>
     
</mapper>