<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.goodbuy.mapper.ChatMapper">

	<!-- 기존 자신의 채팅방 목록 조회요청 -->
	<select id="selectChatRoomList" resultType="chatRoom">
		SELECT s.ROOM_ID
			 , s.PRODUCT_ID
			 , s.TITLE
			 , s.MEM_ID
			 , (SELECT MEM_ID
				  FROM CHATROOM
				 WHERE ROOM_ID = s.ROOM_ID
				   AND MEM_ID != #{sender_id}) AS receiver_id
		     , s.GRADE
		  FROM CHATROOM AS s
		 WHERE MEM_ID = #{sender_id}
		   AND STATUS = 1
		 ORDER
		    BY (SELECT SEND_TIME
		    	  FROM CHATTING
		    	 WHERE ROOM_ID = s.ROOM_ID
		    	 ORDER
		    	    BY IDX DESC
		    	 LIMIT 1) DESC
	</select>
	
	<!-- 해당 채팅방 제일 마지막 대화 조회 -->
	<select id="selectLastMessage" resultType="chatMessage">
		SELECT TYPE
			 , MESSAGE
			 , ROOM_ID
			 , SEND_TIME
		  FROM CHATTING
		 WHERE ROOM_ID = #{room_id}
		 ORDER
		    BY SEND_TIME DESC
		 LIMIT 1
	</select>
	
	<!-- 읽지않은 메세지 갯수 조회 -->
	<select id="selectCountMessage" resultType="int">
		SELECT COUNT(*)
		  FROM CHATTING
		 WHERE RECEIVER_ID = #{receiver_id}
		   AND READ_STATE = 0
		 <if test="!room_id.equals('')">
		   AND ROOM_ID = #{room_id}
		 </if>
	</select>
	
	<!-- 기존의 상대방과의 채팅방 조회 요청 -->
	<select id="selectChatRoom" resultType="chatRoom">
		SELECT c1.ROOM_ID
			 , c1.PRODUCT_ID
			 , c1.TITLE
			 , c1.MEM_ID
			 , c1.STATUS
		  FROM CHATROOM c1
		  JOIN CHATROOM c2
		    ON c1.ROOM_ID = c2.ROOM_ID
		 WHERE c1.MEM_ID = #{sender_id}
		   AND c2.MEM_ID = #{receiver_id}
		   AND c2.PRODUCT_ID = #{product_id}
	</select>
	
	<!-- 새 채팅방 정보 저장 요청 -->
	<insert id="insertChatRoom">
		INSERT
		  INTO CHATROOM
		VALUES
		<foreach collection="list" item="chatRoomList" separator=",">
			 (
			   #{chatRoomList.room_id}
			 , #{chatRoomList.product_id}
			 , #{chatRoomList.title}
			 , #{chatRoomList.sender_id}
			 , #{chatRoomList.status}
			 , #{chatRoomList.grade}
			 )
		</foreach>
	</insert>
	
	<!-- 채팅 메세지 DB 저장 요청 -->
	<insert id="insertChatMessage" useGeneratedKeys="true" keyProperty="idx" keyColumn="idx">
		INSERT
		  INTO CHATTING
		VALUES (
			   #{room_id}
			 , #{sender_id}
			 , #{receiver_id}
			 , #{message}
			 , #{type}
			 , #{send_time}
			 , 0
			 , null
			 )
	</insert>
	
	<!-- 기존 채팅 내역 조회 -->
	<select id="selectChatMessage" resultType="chatMessage">
		SELECT *
		  FROM CHATTING
		 WHERE room_id = #{room_id}
	</select>
	
<!--
REPORT_ID
REPORTER_ID
REPORTED_ID
REPORT_DATE
REASON
STATUS
ACTION_REASON
ADMIN_ID
ACTION_DATE
ROOM_ID
-->
	<!-- 채팅방에서 회원 신고 -->
	<insert id="insertChatReport">
		<selectKey keyProperty="report_id" resultType="int" order="BEFORE">
		SELECT IFNULL(MAX(REPORT_ID), 0)
		  FROM USER_REPORTS
		</selectKey>
		INSERT
		  INTO USER_REPORTS
		VALUES (
			   #{report_id} + 1
			 , #{reporter_id}
			 , #{reported_id}
			 , CURRENT_TIMESTAMP
			 , #{reason}
			 , '접수'
			 , NULL
			 , NULL
			 , NULL
			 , #{room_id}
			 )
	</insert>
	
	<!-- product_id로 가격 알아오기 -->
	<select id="selectProductPrice" resultType="int">
		SELECT PRODUCT_PRICE
		  FROM PRODUCT
		 WHERE PRODUCT_ID = #{product_id}
	</select>
	
	<!-- mem_id로 mem_nick 가져오기 -->
	<select id="selectMemberNick" resultType="member">
		SELECT MEM_NICK
			 , MEM_PROFILE
		  FROM MEMBER
		 WHERE MEM_ID = #{receiver_id}
	</select>
	
	<!-- 모든 메세지 읽음 처리 -->
	<update id="updateAllMessageRead">
		UPDATE CHATTING
		   SET READ_STATE = 1
		 WHERE ROOM_ID = #{room_id}
		   AND RECEIVER_ID = #{sender_id}
	</update>
	
	<!-- 메세지 읽음 처리 -->
	<update id="updateMessageRead">
		UPDATE CHATTING
		   SET READ_STATE = 1
		 WHERE IDX = #{idx}
	</update>
	
	<!-- 상품 id 가져오기 -->
	<select id="selectProductInfo" resultType="int">
		SELECT PRODUCT_ID
		  FROM CHATROOM
		 WHERE ROOM_ID = #{room_id}
		 LIMIT 1
	</select>
	
	<!-- 채팅방 나갔을때 채팅 상태 변경 -->
	<update id="updateChatRoomState">
		UPDATE CHATROOM
		   SET STATUS = 0
		 WHERE ROOM_ID = #{room_id}
		   AND MEM_ID = #{sender_id}
	</update>
	
	
	
</mapper>













