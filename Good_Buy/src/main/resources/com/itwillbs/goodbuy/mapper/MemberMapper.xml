<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.goodbuy.mapper.MemberMapper">
	<!-- ************************************************************** -->
	<!-- 회원 가입 -->
	<insert id="insertMember">
		<selectKey keyProperty="mem_idx" resultType="int" order="BEFORE" >
			SELECT IFNULL(MAX(MEM_IDX), 0)
			FROM MEMBER
		</selectKey>
		INSERT 
		  INTO MEMBER 
		VALUES (
			    #{mem_idx} + 1
			   , #{mem_id}
			   , #{mem_passwd}
			   , #{mem_name}
			   , #{mem_nick}
			   , #{mem_birthday}
			   , CONCAT(#{mem_email1}, '@', #{mem_email2})
			   , #{mem_gender}
			   , #{mem_phone}
			   , #{mem_post_code}
			   , #{mem_address1}
			   , #{mem_address2}
			   , '일반'
			   , 1						-- 회원상태(기본값1)
			   , now()
			   , null
			   , null
			   , null
			   , #{sns_status}			-- SNS연동 상태(1:연동 / 2:연동안함)
			   , #{auth_status}			-- 회원인증여부(1:인증함 / 2:안함)
			   , 0						-- 신고 횟수(기본값0)
			   )
	</insert>
	
	<!-- ************************************************************** -->
	<!-- 회원정보 찾기  -->
	<select id="selectMember" resultType="member">
		SELECT *
		  FROM MEMBER
		 WHERE MEM_ID = #{mem_id}
	</select>
	
	<select id="selectMemInfo" resultType="member">
		SELECT *
		  FROM MEMBER
		 WHERE MEM_PHONE = #{mem_phone}
	</select>
	
	<select id="selectMemberNick" resultType="member">
		SELECT *
		  FROM MEMBER
		 WHERE MEM_NICK = #{mem_nick}
	</select>
	
	<!-- 회원 아이디에 대한 상세정보 조회 - SELECT  -->
	<select id="selectMemberinfo" resultType="member">
		SELECT *
		  FROM MEMBER
		 WHERE MEM_ID = #{mem_id}
	</select>
	
	<!-- ************************************************************** -->
	<!-- 패스워드 찾기로 비번변경 -->
	<update id="updateTempPasswd">
		UPDATE MEMBER
		   SET MEM_PASSWD = #{heshePasswd}
		WHERE MEM_ID = #{mem_id} 
	</update>
	
	<!-- ************************************************************** -->
	<!-- 회원 수정 -->
	<update id="updateMember" >
		UPDATE MEMBER
		SET
			MEM_NICK = #{mem_nick}
			<if test="!mem_passwd.equals('')"> 
	<!-- 		<if test="mem_passwd != null and mem_passwd != ''"> -->
				, MEM_PASSWD = #{mem_passwd}
			</if>
			, MEM_POST_CODE = #{mem_post_code}
			, MEM_ADDRESS1 = #{mem_address1}
			, MEM_ADDRESS2 = #{mem_address2}
			, MEM_PROFILE = #{mem_profile}
<!-- 			, MEM_PHONE = #{mem_phone} -->
	<!-- 		, mem_email = CONCAT(#{mem_email1}, '@', #{mem_email2}) -->
		WHERE
			mem_id = #{mem_id}
	</update>
	<!-- ************************************************************** -->
	<!-- 	메일 인증 후, 인증상태 변경  -->
	<update id="updateMailAuthStatus">
		UPDATE MEMBER
		   SET AUTH_STATUS = 'Y'
		 WHERE MEM_EMAIL = #{mem_email}
	</update>
<!-- 	메일 인증 후, 인증코드 테이블에서 인증코드 삭제 -->
	<delete id="deleteMailAuthInfo">
		DELETE FROM MAIL_AUTH_INFO
		WHERE MEM_EMAIL = #{mem_email}
	</delete>
	
	<insert id="insertMailAuthInfo">
		INSERT INTO MAIL_AUTH_INFO (MEM_EMAIL, AUTH_CODE)
		VALUES(
			#{mem_email}
			, #{auth_code}
		)
	</insert>
	
	<update id="updateMailAuthInfo">
		UPDATE MAIL_AUTH_INFO
		   SET AUTH_CODE = #{auth_code}
		 WHERE MEM_EMAIL = #{mem_email}
	</update>

<!-- 	이메일 인증정보 조회  -->
	<select id="selectMailAuthInfo" resultType="mailAuthInfo">
		SELECT *
		  FROM MAIL_AUTH_INFO
		 WHERE MEM_EMAIL = #{mem_email}
	</select>
	

	<!-- ************************************************************** -->
	<!-- 카카오 로그인 - 이메일 중복 확인  -->
	<select id="selectEmail" resultType="member">
		SELECT *
		  FROM MEMBER
		 WHERE MEM_EMAIL = #{mem_email}
<!-- 		 AND SNS_STATUS = 1  -->
		 AND MEM_STATUS = 1
	</select>
	

	<!-- 카카오 회원정보 인서트 -->
	<insert id="insertMemberInfo" parameterType="map">
		INSERT INTO MEMBER (
			 MEM_ID
			 , MEM_NAME
			 , MEM_NICK
			 , MEM_EMAIL
			 , MEM_PROFILE
			 , SNS_STATUS
			 , MEM_GRADE
			 , MEM_STATUS
		    )
	    VALUES (
	    	#{id}
	    	, #{nickname}
	        , #{nickname}
	        , #{email}
	        , #{profile_image}
	        , 1 -- 1:연동 / 2:연동안함
	        ,'일반'
	        , 1
	    )
	</insert>
	
	<select id="getMemberById" parameterType="string" resultType="member">
	    SELECT * 
	    FROM MEMBER 
	    WHERE MEM_ID = #{id}
	    AND MEM_STATUS = 1
	</select>
	
	
	<update id="updatePasswd">
		UPDATE MEMBER 
		SET MEM_PASSWD = #{securePasswd}
		WHERE MEM_ID = #{mem_id}
	</update>
	
	<!-- ************************************************************** -->
	<!-- 네이버 회원 저장 -->
	<insert id="insertNaverMember">
		<selectKey keyProperty="mem_idx" resultType="int" order="BEFORE" >
			SELECT IFNULL(MAX(MEM_IDX), 0)
			FROM MEMBER
		</selectKey>
		INSERT
		  INTO MEMBER (
		  	MEM_IDX
		  	, MEM_ID
		  	, MEM_NAME
		  	, MEM_NICK
		  	, MEM_GENDER
		  	, MEM_PROFILE
		  	, MEM_EMAIL
		  	, MEM_GRADE
		  	, MEM_STATUS
		  	, MEM_REG_DATE
		  	, SNS_STATUS
		  ) VALUES (
		  	#{mem_idx} + 1
		  	, #{mem_id}
		  	, #{mem_name}
		  	, #{mem_nick}
		  	, #{mem_gender}
		  	, #{mem_profile}
		  	, #{mem_email}
		  	, '일반'
		  	, 1
		  	, now()
		  	, 1
		  )
	</insert>
	
	<!-- ************************************************************** -->
	<!-- 	상점소개 업데이트 -->
	<update id="updateStoreIntro" parameterType="member">
		UPDATE MEMBER
		   SET 
			MEM_INTRO = #{mem_intro}
		 WHERE MEM_ID = #{mem_id}
	</update>
	
	<!-- 	상점소개 조회 -->
	<select id="selectStoreIntro">
		SELECT MEM_INTRO
		FROM MEMBER
		WHERE MEM_ID = #{mem_id}
	</select>
	
	<!-- ************************************************************** -->
	<!-- [CoolSMS] 휴대폰번호 인증 중복 확인  -->
	<select id="selectMemberInfo" resultType="String">
		SELECT MEM_ID
		  FROM MEMBER
		 WHERE MEM_PHONE = #{userPhone}
	</select>
	
	<!-- [CoolSMS] 휴대폰 인증 정보 저장(인증대기) -->
	<insert id="insertSmsAuthInfo" parameterType="smsAuthInfoVO">
	    INSERT INTO PHONE_AUTH_INFO (MEM_PHONE, AUTH_CODE, AUTH_DATE, STATUS)
	    VALUES (
	    	#{mem_phone}
	    	, #{auth_code}
	    	, now()
	    	, 0 -- 인증대기
	    	)
	</insert>
	
	<!-- [CoolSMS] 휴대폰 인증 정보 조회 -->
	<select id="selectSmsAuthInfo" parameterType="String" resultType="SmsAuthInfoVO">
	    SELECT  *
	      FROM PHONE_AUTH_INFO
	     WHERE AUTH_CODE = #{authCode}
	       AND STATUS = 0 -- 인증대기 상태만 조회
	     ORDER BY AUTH_DATE DESC -- 최신 요청 순으로 조회
	     LIMIT 1
	</select>
	
	<!-- [CoolSMS] 인증 상태 업데이트 -->
	<update id="updateAuthStatus" parameterType="map">
	    UPDATE PHONE_AUTH_INFO
	       SET STATUS = 1 -- 인증 완료
	       		, AUTH_DATE = now()
	     WHERE AUTH_CODE = #{authCode}
	       AND STATUS = 0 
	</update>
	
	

	<!-- ************************************************************** -->
	<!-- 회원탈퇴  status = 3 -->
	<update id="updateMemberStatus">
		UPDATE MEMBER
		  SET 
		  	MEM_STATUS = #{mem_status}
			, MEM_WITHDRAW_DATE = now()
			, MEM_PHONE = NULL
		 WHERE MEM_ID = #{mem_id}
	</update>
	<!-- Sns 계정 삭제 -->
	<delete id="deleteSnsInfo">
		DELETE FROM MEMBER
		WHERE MEM_ID = #{mem_id}
	</delete>
	
	<!-- ************************************************************** -->
	<!-- 채팅 - MEM_ID 조회 -->
	<select id="selectMemberId" resultType="string">
		SELECT MEM_ID
		  FROM MEMBER
		 WHERE MEM_ID = #{mem_id}
		 AND MEM_STATUS = 1
	</select>
	
	
</mapper>